{
  "hash": "aa6bc5a13ec18afd2aff2164c6cf439b",
  "result": {
    "markdown": "---\ntitle: \"Interactivity\"\nexecute: \n  echo: false\n---\n\n## Overview\n\nAdding interactivity to an article is a great way to help readers explore the concepts and data you are presenting more deeply. There are three ways to add interactive components to Quarto documents:\n\n1.  Create custom JavaScript visualizations using [Observable JS](ojs/).\n\n2.  Use the [Shiny](shiny/) R package to add interactivity to Knitr engine documents.\n\n3.  Incorporate [Jupyter Widgets](widgets/jupyter.qmd) or [htmlwidgets](widgets/htmlwidgets.qmd) (for the Jupyter and Knitr engines, respectively) into your document.\n\nEach of these techniques has distinct benefits and drawbacks in terms of expressiveness, ease of development, and deployment requirements. We'll touch on these considerations briefly below, then provide links to more in depth documentation for learning more.\n\n## Observable JS\n\nQuarto includes native support for [Observable JS](https://observablehq.com/@observablehq/observables-not-javascript), a set of enhancements to vanilla JavaScript created by [Mike Bostock](https://en.wikipedia.org/wiki/Mike_Bostock) (also the author of [D3](https://d3js.org/)). Observable JS is distinguished by its [reactive runtime](https://github.com/observablehq/runtime), which is especially well suited for interactive data exploration and analysis.\n\nHere's an example that provides slider inputs to condition the behavior of a visualization:\n\n```{ojs}\n//| panel: sidebar\nviewof talentWeight = Inputs.range([-2, 2], { value: 0.7, step: 0.01, label: \"talent weight\" })\nviewof looksWeight = Inputs.range([-2, 2], { value: 0.7, step: 0.01, label: \"looks weight\" })\nviewof minimum = Inputs.range([-2, 2], { value: 1, step: 0.01, label: \"minimum fame\" })\n```\n\n```{ojs}\n//| panel: fill\n{\n  const w = 400\n  const h = 400;\n  const result = d3.create(\"svg\").attr(\"width\", w).attr(\"height\", h);\n  const margin = 20;\n  const xScale = d3.scaleLinear().domain([-2, 2]).range([margin, w - margin]);\n  const yScale = d3.scaleLinear().domain([-2, 2]).range([h - margin, margin]);\n  const points = result\n    .append(\"g\")\n    .selectAll(\"circle\")\n    .data(actors)\n    .join(enter => {\n       const sel = enter\n         .append(\"circle\")\n         .attr(\"r\", 3)\n         .attr(\"cx\", d => xScale(d.talent))\n         .attr(\"cy\", d => yScale(d.looks))\n         .attr(\"fill\", d3.lab(50, 40, 20));\n       return sel.filter(d => d.fame <= minimum)\n         .attr(\"fill\", \"rgb(200, 200, 200)\")\n         .attr(\"r\", 2);\n    });\n    \n  const linearRegression = regression.regressionLinear()\n    .x(d => d.talent)\n    .y(d => d.looks)\n    .domain([-2, 2]);\n\n  const chosenActors = actors\n    .filter(d => d.fame > minimum);\n\n  const line = result\n    .append(\"g\")\n    .append(\"line\")\n    .attr(\"stroke\", d3.lab(20, 40, 20))\n    .attr(\"stroke-width\", 1.5)\n    .datum(linearRegression(chosenActors))\n    .attr(\"x1\", d => xScale(d[0][0]))\n    .attr(\"x2\", d => xScale(d[1][0]))\n    .attr(\"y1\", d => yScale(d[0][1]))\n    .attr(\"y2\", d => yScale(d[1][1]));\n\n\n  const xAxis = d3.axisBottom(xScale).ticks(3);\n  result.append(\"g\")\n    .attr(\"transform\", `translate(0, ${yScale(0)})`)\n    .call(xAxis);\n\n  result.append(\"text\")\n    .attr(\"x\", xScale(0.05))\n    .attr(\"y\", yScale(2))\n    .text(\"Looks\");\n\n  result.append(\"text\")\n    .attr(\"y\", yScale(0.1))\n    .attr(\"x\", xScale(-2))\n    .text(\"Talent\");\n\n  const yAxis = d3.axisLeft(yScale).ticks(3);\n  result.append(\"g\")\n    .attr(\"transform\", `translate(${xScale(0)}, 0)`)\n    .call(yAxis);\n  \n  return result.node();\n}\n```\n\n::: {.cell execution_count=1}\n\n::: {.cell-output-display}\n```{=html}\n<script type=\"ojs-define\">{\"contents\": [{\"name\": \"points\", \"value\": {\"x\": [-0.6762153149, -0.7594886675, -1.1040715023, 0.8626114462, -0.593759677, 0.8433552001, 0.9929594084, 0.7028761725, 0.5840102614, 0.0534381919, 0.8996494019, -0.4645888189, -0.0219238227, -1.1458332123, -0.6041634775, 1.9209697297, -0.1907450098, 0.2045519883, 0.2444066471, -0.6605579144, -0.9254545603, -0.2989144268, -0.3190314892, 1.4322730445, 0.6291358575, 0.2853612573, 0.3353885441, 1.2322809558, -0.7517877934, 1.9259996722, -0.1159681838, 0.7408258198, -0.9637809497, 0.3810459027, -0.0973753027, 0.6113578559, 0.5136945744, -1.6614286849, -0.2133660682, -2.0792752914, -0.1361158398, 0.3405475555, 1.6147237653, -0.8857939341, 0.6576152996, 0.001081395, 0.0734405651, -1.3098049056, 0.3532076949, 0.701696458, 1.4323517088, 0.8958904103, 1.4082352513, 0.694472763, -1.7491214822, -0.511336108, 1.4214350388, 1.0215435553, 0.5634046254, -1.9911457379, -0.6040540228, -1.205924586, 0.3435634032, -1.3472788699, 0.4144648686, -0.747114211, -0.9425225263, -1.0232079237, 2.926848329, -0.8363740996, 0.424719716, 0.2978685069, 0.961801364, -0.1624325408, -0.0838902906, -1.255424788, -0.7274557147, 1.5787639528, 0.903147407, 0.3218103817, -0.4645364566, -1.264658256, -0.5997428641, 0.9090623638, -0.6778587699, 0.5636187556, -0.8188143595, -0.5952273075, 1.1810746617, 1.217506476, -0.0671085248, 2.5045370689, -1.1445704818, -0.07785406, -1.2372343735, -0.8204661935, -2.2574826546, 0.5613982619, 0.8831037387, 2.039077429], \"y\": [0.4479628709, 0.3025426867, 0.7061563197, 0.3145428011, 0.1310897244, 1.6143605382, 1.3471116872, 0.335144507, 0.08309729, 0.0740350169, -0.7071636081, 0.328576159, -0.5021016643, -1.1271779196, 1.1311541217, -0.1264769615, 0.0129550838, -0.6682490503, -1.542430433, -0.2537960748, -0.5685992862, -1.7281393179, 0.5191014069, -0.1500224193, -3.5977927678, -0.484228597, 0.470981762, -0.9685318642, -0.3838748841, -0.1776654627, 0.5959760716, -0.2030144813, -0.5370623373, 0.2206598792, 2.3557375483, -0.1145702164, -0.8652183213, 1.4805769898, 0.5175447534, 0.5863511118, -0.0769813627, 0.5617326176, -0.4858532737, 1.0519418875, 1.1136664767, 1.564773044, 1.0059843977, 0.059250576, -0.5201740128, -0.6794148986, -1.1720114236, -1.6120159503, 0.8714070467, -1.5739150587, 0.608017704, -3.4851887885, 1.1339100186, -0.3457958413, 0.3388048276, 0.0226017367, 2.9515916876, -0.1676554509, -0.0666853092, 0.7117279763, 1.6782419275, -0.5042821418, -0.8984218548, -1.526443965, 0.5717880353, 1.4744231883, 0.1996818911, 0.2957475964, 0.0463273797, 0.8398833526, 0.1786594298, 0.5617736834, 0.3781379498, 2.243778392, 0.0747085034, -0.8898962022, 1.215953252, 0.2017392397, 1.3006835626, 0.0183577357, -1.4755385883, 2.421090342, -0.9842867769, -0.9818547752, 0.5519173546, -0.9562154903, -0.9764429375, -0.3834402901, 0.7897656965, -0.6479821756, 0.1052801686, -2.3001428268, -1.1055617069, -0.0488907966, -1.1325053211, -0.9710076329]}}]}</script>\n```\n:::\n:::\n\n\n```{ojs}\nactors = transpose(points).map(v => ({\n  talent: v.x,\n  looks: v.y,\n  fame: v.x * talentWeight + v.y * looksWeight\n}));\n```\n\n```{ojs}\ntranspose = function(df)\n{\n  const keys = Object.keys(df);\n  return df[keys[0]]\n    .map((v, i) => Object.fromEntries(keys.map(key => [key, df[key][i] || undefined])))\n    .filter(v => Object.values(v).every(e => e !== undefined));\n}\nregression = require('d3-regression@1');\n```\n\nObservable JS uses some special keywords and a custom runtime to make JavaScript reactive. For example, the \"minimum fame\" slider in the example above was created with the following code:\n\n``` js\nviewof minimum = Inputs.range([-2, 2], { \n  value: 1, step: 0.01, \n  label: \"minimum fame\"\n})\n```\n\nIt's then referenced as a normal JavaScript variable in code that creates the plot:\n\n``` js\nsel.filter(d => d.fame <= minimum)\n```\n\nAs the user interacts with the slider, the `minimum` value is updated and any code that references it is automatically re-executed.\n\nOne benefit of using JavaScript for interactive documents is that all the logic and computation is performed on the client (so no server is required for deployment).\n\nTo learn more see the articles on [Observable JS](ojs/).\n\n## Shiny\n\nThe Shiny package provides a flexible, easy to use framework for creating interactive web applications with R. Quarto in turn includes support for embedding Shiny components and applets into documents created with the Knitr engine.\n\nHere's a live example of Shiny interactive components along with a brief explanation of the code required to create them:\n\n::: {.border layout-ncol=\"2\"}\n```{=html}\n <iframe id=\"example1\" src=\"https://gallery.shinyapps.io/goog-trend-index/\" style=\"border: none; width: 100%; height: 720px\" frameborder=\"0\"></iframe>\n```\n<div>\n\n<br/>\n\nShiny comes with a variety of built in input widgets. With minimal syntax it is possible to include widgets like the ones shown on the left in your apps:\n\n``` r\n# Select type of trend to plot\nselectInput(inputId = \"type\", \n            label = strong(\"Trend index\"),\n            choices = unique(trend_data$type),\n            selected = \"Travel\")\n```\n\nDisplaying outputs is equally hassle-free:\n\n``` r\nmainPanel(\n  plotOutput(outputId = \"lineplot\", \n             height = \"300px\"),\n)\n```\n\nBuild your plots or tables as you normally would in R, and make them reactive with a call to the appropriate render function:\n\n``` r\noutput$lineplot <- renderPlot({\n  plot(x = selected_trends()$date, \n       y = selected_trends()$close, \n       type = \"l\",\n       xlab = \"Date\", \n       ylab = \"Trend index\")\n})\n```\n\n</div>\n:::\n\nShiny makes it very straightforward to create interactive documents using only R. Unlike using JavaScript though, you will need to [deploy](shiny/running.qmd#deployment) documents that use Shiny to a server.\n\nTo learn more see the articles on [Using Shiny with Quarto](shiny/).\n\n## Widgets\n\n[Jupyter Widgets](https://jupyter.org/widgets) and [htmlwidgets](https://www.htmlwidgets.org/) are great ways to incorporate interactivity into your documents if you don't know JavaScript and prefer to work exclusively in Python or R. They also run entirely client-side so can be deployed within normal static HTML documents.\n\nFor example, the following Python code is all that is required to embed a Leaflet map into a Jupyter engine document:\n\n::: {.cell execution_count=2}\n```` { .cell-code}\n```{{python}}\nfrom ipyleaflet import Map, Marker, basemaps, basemap_to_tiles\nm = Map(\n  basemap=basemap_to_tiles(\n    basemaps.NASAGIBS.ModisTerraTrueColorCR, \"2017-04-08\"\n  ),\n  center=(52.204793, 360.121558),\n  zoom=4\n)\nm.add_layer(Marker(location=(52.204793, 360.121558)))\nm\n```\n\n````\n\n::: {.cell-output-display}\n```{=html}\n<script type=\"application/vnd.jupyter.widget-view+json\">\n{\"model_id\":\"21046bce2b2e4ff291751fae55dccbb6\",\"version_major\":2,\"version_minor\":0}\n</script>\n```\n:::\n:::\n\n\nTo learn more see these articles on using widgets with Quarto:\n\n-   [Jupyter Widgets](widgets/jupyter.qmd) (Jupyter engine).\n\n-   [htmlwidgets](widgets/htmlwidgets.qmd) (Knitr engine).\n\n## Layout\n\nOnce you've gotten familiar with using various interactive components see the article on [Component Layout](layout.qmd) to learn how to:\n\n-   Group inputs into an [input panel](layout.qmd#input-panel).\n\n-   Present multiple outputs in a [tabset panel](layout.qmd#tabset-panel).\n\n-   Use a [full page layout](layout.qmd#full-page-layout) rather than the default article layout.\n\n-   Add a [sidebar panel](layout.qmd#sidebar-panel) for inputs in a full page layout.\n\n-   Create custom [panel layouts](layout.qmd#panel-layout) to arrange outputs into rows and columns.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n<script src=\"https://unpkg.com/@jupyter-widgets/html-manager@*/dist/embed-amd.js\" crossorigin=\"anonymous\"></script>\n"
      ],
      "include-after-body": [
        "<script type=application/vnd.jupyter.widget-state+json>\n{\"state\":{\"21046bce2b2e4ff291751fae55dccbb6\":{\"model_module\":\"jupyter-leaflet\",\"model_module_version\":\"^0.14.0\",\"model_name\":\"LeafletMapModel\",\"state\":{\"_dom_classes\":[],\"_model_module\":\"jupyter-leaflet\",\"_model_module_version\":\"^0.14.0\",\"_model_name\":\"LeafletMapModel\",\"_view_count\":null,\"_view_module\":\"jupyter-leaflet\",\"_view_module_version\":\"^0.14.0\",\"_view_name\":\"LeafletMapView\",\"bottom\":0,\"bounce_at_zoom_limits\":true,\"box_zoom\":true,\"center\":[52.204793,360.121558],\"close_popup_on_click\":true,\"controls\":[\"IPY_MODEL_59bae2769afb46b0af43df327d4ef404\",\"IPY_MODEL_abe0016252a3405e9d4836e309b231f5\"],\"crs\":{\"custom\":false,\"name\":\"EPSG3857\"},\"default_style\":\"IPY_MODEL_bfbd32155031436c8ff32aec4eaa93da\",\"double_click_zoom\":true,\"dragging\":true,\"dragging_style\":\"IPY_MODEL_8520367303a94b4b81a442c95776d9a1\",\"east\":0,\"fullscreen\":false,\"inertia\":true,\"inertia_deceleration\":3000,\"inertia_max_speed\":1500,\"interpolation\":\"bilinear\",\"keyboard\":true,\"keyboard_pan_offset\":80,\"keyboard_zoom_offset\":1,\"layers\":[\"IPY_MODEL_7d5661eab9154d039f279d93069822bd\",\"IPY_MODEL_6aeca90655c044ea880d6e466a3007ed\"],\"layout\":\"IPY_MODEL_f137ce16b43541edbb5750093a287f08\",\"left\":9007199254740991,\"max_zoom\":18,\"min_zoom\":1,\"modisdate\":\"yesterday\",\"north\":0,\"options\":[\"bounce_at_zoom_limits\",\"box_zoom\",\"center\",\"close_popup_on_click\",\"double_click_zoom\",\"dragging\",\"fullscreen\",\"inertia\",\"inertia_deceleration\",\"inertia_max_speed\",\"interpolation\",\"keyboard\",\"keyboard_pan_offset\",\"keyboard_zoom_offset\",\"max_zoom\",\"min_zoom\",\"scroll_wheel_zoom\",\"tap\",\"tap_tolerance\",\"touch_zoom\",\"world_copy_jump\",\"zoom\",\"zoom_animation_threshold\",\"zoom_delta\",\"zoom_snap\",\"zoom_start\"],\"right\":0,\"scroll_wheel_zoom\":false,\"south\":0,\"style\":\"IPY_MODEL_a47c9cbd0d7245f093fa758de934fc43\",\"tap\":true,\"tap_tolerance\":15,\"top\":9007199254740991,\"touch_zoom\":true,\"west\":0,\"window_url\":\"\",\"world_copy_jump\":false,\"zoom\":4,\"zoom_animation_threshold\":4,\"zoom_delta\":1,\"zoom_snap\":1,\"zoom_start\":12}},\"59bae2769afb46b0af43df327d4ef404\":{\"model_module\":\"jupyter-leaflet\",\"model_module_version\":\"^0.14.0\",\"model_name\":\"LeafletZoomControlModel\",\"state\":{\"_model_module\":\"jupyter-leaflet\",\"_model_module_version\":\"^0.14.0\",\"_model_name\":\"LeafletZoomControlModel\",\"_view_count\":null,\"_view_module\":\"jupyter-leaflet\",\"_view_module_version\":\"^0.14.0\",\"_view_name\":\"LeafletZoomControlView\",\"options\":[\"position\",\"zoom_in_text\",\"zoom_in_title\",\"zoom_out_text\",\"zoom_out_title\"],\"position\":\"topleft\",\"zoom_in_text\":\"+\",\"zoom_in_title\":\"Zoom in\",\"zoom_out_text\":\"-\",\"zoom_out_title\":\"Zoom out\"}},\"6aeca90655c044ea880d6e466a3007ed\":{\"model_module\":\"jupyter-leaflet\",\"model_module_version\":\"^0.14.0\",\"model_name\":\"LeafletMarkerModel\",\"state\":{\"_model_module\":\"jupyter-leaflet\",\"_model_module_version\":\"^0.14.0\",\"_model_name\":\"LeafletMarkerModel\",\"_view_count\":null,\"_view_module\":\"jupyter-leaflet\",\"_view_module_version\":\"^0.14.0\",\"_view_name\":\"LeafletMarkerView\",\"alt\":\"\",\"base\":false,\"bottom\":false,\"draggable\":true,\"icon\":null,\"keyboard\":true,\"location\":[52.204793,360.121558],\"name\":\"\",\"opacity\":1,\"options\":[\"alt\",\"draggable\",\"keyboard\",\"rise_offset\",\"rise_on_hover\",\"rotation_angle\",\"rotation_origin\",\"title\",\"z_index_offset\"],\"popup\":null,\"popup_max_height\":null,\"popup_max_width\":300,\"popup_min_width\":50,\"rise_offset\":250,\"rise_on_hover\":false,\"rotation_angle\":0,\"rotation_origin\":\"\",\"title\":\"\",\"visible\":true,\"z_index_offset\":0}},\"7d5661eab9154d039f279d93069822bd\":{\"model_module\":\"jupyter-leaflet\",\"model_module_version\":\"^0.14.0\",\"model_name\":\"LeafletTileLayerModel\",\"state\":{\"_model_module\":\"jupyter-leaflet\",\"_model_module_version\":\"^0.14.0\",\"_model_name\":\"LeafletTileLayerModel\",\"_view_count\":null,\"_view_module\":\"jupyter-leaflet\",\"_view_module_version\":\"^0.14.0\",\"_view_name\":\"LeafletTileLayerView\",\"attribution\":\"\\nImagery provided by services from the Global Imagery Browse Services (GIBS), operated by the NASA/GSFC/Earth Science Data and Information System (<a href=\\\"https://earthdata.nasa.gov\\\">ESDIS</a>) with funding provided by NASA/HQ.\\n\",\"base\":true,\"bottom\":true,\"detect_retina\":false,\"loading\":false,\"max_native_zoom\":18,\"max_zoom\":9,\"min_native_zoom\":0,\"min_zoom\":1,\"name\":\"NASAGIBS.ModisTerraTrueColorCR\",\"no_wrap\":false,\"opacity\":1,\"options\":[\"attribution\",\"detect_retina\",\"max_native_zoom\",\"max_zoom\",\"min_native_zoom\",\"min_zoom\",\"no_wrap\",\"tile_size\",\"tms\"],\"popup\":null,\"popup_max_height\":null,\"popup_max_width\":300,\"popup_min_width\":50,\"show_loading\":false,\"tile_size\":256,\"tms\":false,\"url\":\"https://gibs.earthdata.nasa.gov/wmts/epsg3857/best/MODIS_Terra_CorrectedReflectance_TrueColor/default/2017-04-08/GoogleMapsCompatible_Level9/{z}/{y}/{x}.jpg\",\"visible\":true}},\"8520367303a94b4b81a442c95776d9a1\":{\"model_module\":\"jupyter-leaflet\",\"model_module_version\":\"^0.14.0\",\"model_name\":\"LeafletMapStyleModel\",\"state\":{\"_model_module\":\"jupyter-leaflet\",\"_model_module_version\":\"^0.14.0\",\"_model_name\":\"LeafletMapStyleModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"1.2.0\",\"_view_name\":\"StyleView\",\"cursor\":\"move\"}},\"a47c9cbd0d7245f093fa758de934fc43\":{\"model_module\":\"jupyter-leaflet\",\"model_module_version\":\"^0.14.0\",\"model_name\":\"LeafletMapStyleModel\",\"state\":{\"_model_module\":\"jupyter-leaflet\",\"_model_module_version\":\"^0.14.0\",\"_model_name\":\"LeafletMapStyleModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"1.2.0\",\"_view_name\":\"StyleView\",\"cursor\":\"grab\"}},\"abe0016252a3405e9d4836e309b231f5\":{\"model_module\":\"jupyter-leaflet\",\"model_module_version\":\"^0.14.0\",\"model_name\":\"LeafletAttributionControlModel\",\"state\":{\"_model_module\":\"jupyter-leaflet\",\"_model_module_version\":\"^0.14.0\",\"_model_name\":\"LeafletAttributionControlModel\",\"_view_count\":null,\"_view_module\":\"jupyter-leaflet\",\"_view_module_version\":\"^0.14.0\",\"_view_name\":\"LeafletAttributionControlView\",\"options\":[\"position\",\"prefix\"],\"position\":\"bottomright\",\"prefix\":\"ipyleaflet\"}},\"bfbd32155031436c8ff32aec4eaa93da\":{\"model_module\":\"jupyter-leaflet\",\"model_module_version\":\"^0.14.0\",\"model_name\":\"LeafletMapStyleModel\",\"state\":{\"_model_module\":\"jupyter-leaflet\",\"_model_module_version\":\"^0.14.0\",\"_model_name\":\"LeafletMapStyleModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"1.2.0\",\"_view_name\":\"StyleView\",\"cursor\":\"grab\"}},\"f137ce16b43541edbb5750093a287f08\":{\"model_module\":\"@jupyter-widgets/base\",\"model_module_version\":\"1.2.0\",\"model_name\":\"LayoutModel\",\"state\":{\"_model_module\":\"@jupyter-widgets/base\",\"_model_module_version\":\"1.2.0\",\"_model_name\":\"LayoutModel\",\"_view_count\":null,\"_view_module\":\"@jupyter-widgets/base\",\"_view_module_version\":\"1.2.0\",\"_view_name\":\"LayoutView\",\"align_content\":null,\"align_items\":null,\"align_self\":null,\"border\":null,\"bottom\":null,\"display\":null,\"flex\":null,\"flex_flow\":null,\"grid_area\":null,\"grid_auto_columns\":null,\"grid_auto_flow\":null,\"grid_auto_rows\":null,\"grid_column\":null,\"grid_gap\":null,\"grid_row\":null,\"grid_template_areas\":null,\"grid_template_columns\":null,\"grid_template_rows\":null,\"height\":null,\"justify_content\":null,\"justify_items\":null,\"left\":null,\"margin\":null,\"max_height\":null,\"max_width\":null,\"min_height\":null,\"min_width\":null,\"object_fit\":null,\"object_position\":null,\"order\":null,\"overflow\":null,\"overflow_x\":null,\"overflow_y\":null,\"padding\":null,\"right\":null,\"top\":null,\"visibility\":null,\"width\":null}}},\"version_major\":2,\"version_minor\":0}\n</script>\n"
      ]
    }
  }
}